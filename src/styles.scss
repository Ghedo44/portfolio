@tailwind base;
@tailwind components;
@tailwind utilities;

html, body {
    scroll-behavior: smooth;
    height: 100%;
}

.btn {
    @apply font-bold py-2 px-4 rounded-lg transition-all duration-200;

    // hover and not disabled
    &:not(:disabled):hover {
        @apply shadow-md rounded-xl scale-105;
    }

    &.btn-primary {
        @apply bg-blue-500 text-white;

        &:not(:disabled):hover {
            @apply bg-blue-600;
        }
    }

    &.btn-secondary {
        @apply bg-white text-blue-500;

        &:not(:disabled):hover {
            @apply bg-gray-200;
        }
    }

    &.btn-outline {
        @apply bg-transparent border border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white;
    }

    // if is disabled
    &:disabled {
        @apply bg-gray-300 text-gray-500 cursor-not-allowed;

        &:hover {
            @apply outline outline-1 outline-red-700 transition-none;
        }
    }

}



@layer components {
.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
}
.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: var(--padding-card, 2rem);
    gap: .5rem;
}

.card figure {
    display: flex;
    align-items: center;
    justify-content: center;
}
.card-side {
    align-items: stretch;
    flex-direction: row;
}

.card-side :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: unset;
}
.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
}


.card-side figure>* {
    max-width: unset;
}
.card-side figure>* {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
}


// Input
.input {
    flex-shrink: 1;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.input-bordered {
    border-color: rgba($color: #bdbdbd, $alpha: 1.0);
}

.textarea {
    min-height: 3rem;
    flex-shrink: 1;
    padding: .5rem 1rem;
    font-size: .875rem;
    line-height: 1.25rem;
    line-height: 2;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.textarea-bordered {
    border-color: rgba($color: #bdbdbd, $alpha: 1.0);
}
textarea {
    resize: vertical;
}

// avatar

.avatar {
    position: relative;
    display: inline-flex;
}

.avatar>div {
    display: block;
    aspect-ratio: 1 / 1;
    overflow: hidden;
}

.avatar img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}